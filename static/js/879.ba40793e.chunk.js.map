{"version":3,"file":"static/js/879.ba40793e.chunk.js","mappings":"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","sources":["components/movieDetails/MovieDetails.styled.js","components/movieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","service/apiService.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  padding: ${p => p.theme.space[4]}px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchMoviesById } from 'service/apiService';\nimport { DetailsContainer } from './MovieDetails.styled';\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getFetchMoovies(movieId) {\n      try {\n        const data = await fetchMoviesById(movieId);\n\n        setMovie(data);\n      } catch (error) {\n        toast.error('Page not found', { duration: 3000 });\n      }\n    }\n    getFetchMoovies(movieId);\n  }, [movieId]);\n  if (Object.keys(movie).length > 0) {\n    const { title, vote_average, overview, genres, poster_path } = movie;\n    const userScore = vote_average * 10;\n    const movieGenres = genres.map(genre => genre.name).join(', ');\n\n    return (\n      <DetailsContainer>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n        />\n        <h2>{title}</h2>\n        <p>\n          User score: <span>{userScore}%</span>\n        </p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>{movieGenres}</p>\n      </DetailsContainer>\n    );\n  }\n};\n","import { Link, Outlet, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { MovieDetails } from 'components/movieDetails/MovieDetails';\nconst MovieDetailsRender = () => {\n  const location = useLocation();\n  //   const { movieId } = useParams();\n  const goBackPage = location.state?.from ?? '/';\n  return (\n    <>\n      <GoBack to={goBackPage}>Go back</GoBack>\n      <MovieDetails />\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <AdditionalLink to=\"cast\">Cast</AdditionalLink>\n        <AdditionalLink to=\"reviews\">Reviews</AdditionalLink>\n      </AdditionalInfo>\n\n      <Outlet />\n    </>\n  );\n};\nconst GoBack = styled(Link)`\n  padding: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-bottom: ${p => p.theme.space[3]}px;\n  margin-left: ${p => p.theme.space[3]}px;\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\nconst AdditionalInfo = styled.div`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  margin-left: ${p => p.theme.space[4]}px;\n`;\nconst AdditionalLink = styled(Link)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-right: ${p => p.theme.space[4]}px;\n  &.active {\n    color: ${p => p.theme.colors.accent};\n  }\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\nexport default MovieDetailsRender;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b955cfd3c9f73eb51718e31500dd3096';\n\nexport const fetchTrendingMoovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesBySearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCastById = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviewById = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// export async function fetchTrendingMoovies() {\n//   const url = `/trending/movie/week?api_key=${apiKey}`;\n//   const { data } = await axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesBySearch(searchMovie) {\n//   const url = `/search/movie?query=${searchMovie}&api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesById(movieId) {\n//   const url = `/movie/${movieId}?api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n"],"names":["DetailsContainer","styled","p","theme","space","MovieDetails","useState","movie","setMovie","movieId","useParams","useEffect","fetchMoviesById","data","toast","duration","getFetchMoovies","Object","keys","length","title","vote_average","overview","genres","poster_path","userScore","movieGenres","map","genre","name","join","src","alt","GoBack","Link","colors","text","fontWeights","bold","accent","AdditionalInfo","AdditionalLink","fontSizes","l","goBackPage","useLocation","state","from","to","axios","API_KEY","fetchTrendingMoovies","response","console","log","message","fetchMoviesBySearch","query","fetchCastById","fetchReviewById"],"sourceRoot":""}