{"version":3,"file":"static/js/983.181fa5f4.chunk.js","mappings":"2MAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wKACV,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAEpB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,QAChB,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,KACrB,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,UAG7B,SAAAR,GAAC,OAAIA,EAAEC,MAAME,OAAOM,U,SCCjC,EAXkB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACvB,OACE,+BACE,yBACE,SAACd,EAAD,CAAWe,GAAE,kBAAaF,GAA1B,UACE,wBAAKC,WCJFE,EAAOf,EAAAA,GAAAA,GAAH,uEACA,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MAClB,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MCFxBY,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,SAACF,EAAD,UACGE,EAAOC,KAAI,YAA6B,IAA1BN,EAAyB,EAAzBA,GAAIO,EAAqB,EAArBA,eACjB,OAAO,SAAC,EAAD,CAAoBN,MAAOM,EAAgBP,GAAIA,GAA/BA,U,mJCDhB,SAASQ,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeK,EAAf,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBC,EAAAA,EAAAA,MAFvB,OAEUC,EAFV,OAGYC,EAAYD,EAAZC,QACRJ,EAAUI,GAJd,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,KACC,KAEI,8BAAGZ,IAAU,SAAC,IAAD,CAAYA,OAAQA,Q,0MClB1Ca,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHP,EAAoB,mCAAG,6GAETM,IAAAA,IAAA,sCAAyCC,IAFhC,cAE1BC,EAF0B,yBAGzBA,EAASP,MAHgB,gCAKhCE,QAAQC,IAAI,KAAMK,SALc,yDAAH,qDASpBC,EAAmB,mCAAG,WAAMC,GAAN,gGAERL,IAAAA,IAAA,gCACIC,EADJ,kBACqBI,IAHb,cAEzBH,EAFyB,yBAKxBA,EAASP,MALe,gCAO/BE,QAAQC,IAAI,KAAMK,SAPa,yDAAH,sDAWnBG,EAAe,mCAAG,WAAMC,GAAN,gGAEJP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAuCN,IAFnC,cAErBC,EAFqB,yBAGpBA,EAASP,MAHW,gCAK3BE,QAAQC,IAAI,KAAMK,SALS,yDAAH,sDASfK,EAAa,mCAAG,WAAMD,GAAN,gGAEFP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAHd,cAEnBC,EAFmB,yBAKlBA,EAASP,MALS,gCAOzBE,QAAQC,IAAI,KAAMK,SAPO,yDAAH,sDAWbM,EAAe,mCAAG,WAAMF,GAAN,gGAEJP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,IAHZ,cAErBC,EAFqB,yBAKpBA,EAASP,MALW,gCAO3BE,QAAQC,IAAI,KAAMK,SAPS,yDAAH","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/moviesList/MovieList.styled.js","components/moviesList/MoviesList.jsx","pages/HomePage.jsx","service/apiService.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  margin: ${p => p.theme.space[0]}px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { MovieLink } from './MovieItem.styled';\nconst MovieItem = ({ id, title }) => {\n  return (\n    <>\n      <li>\n        <MovieLink to={`/movies/${id}`}>\n          <h3>{title}</h3>\n        </MovieLink>\n      </li>\n    </>\n  );\n};\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[0]}px;\n`;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title }) => {\n        return <MovieItem key={id} title={original_title} id={id} />;\n      })}\n    </List>\n  );\n};\n","import { MoviesList } from '../components/moviesList/MoviesList';\nimport { useState, useEffect } from 'react';\n\nimport { fetchTrendingMoovies } from '../service/apiService';\n\nexport default function HomePageRender() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function getFetchMoovies() {\n      try {\n        const data = await fetchTrendingMoovies();\n        const { results } = data;\n        setMovies(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFetchMoovies();\n  }, []);\n\n  return <>{movies && <MoviesList movies={movies} />}</>;\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b955cfd3c9f73eb51718e31500dd3096';\n\nexport const fetchTrendingMoovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesBySearch = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCastById = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviewById = async movieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// export async function fetchTrendingMoovies() {\n//   const url = `/trending/movie/week?api_key=${apiKey}`;\n//   const { data } = await axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesBySearch(searchMovie) {\n//   const url = `/search/movie?query=${searchMovie}&api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesById(movieId) {\n//   const url = `/movie/${movieId}?api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n"],"names":["MovieLink","styled","Link","p","theme","space","colors","text","fontSizes","m","fontWeights","normal","accent","id","title","to","List","MoviesList","movies","map","original_title","HomePageRender","useState","setMovies","useEffect","fetchTrendingMoovies","data","results","console","log","getFetchMoovies","axios","API_KEY","response","message","fetchMoviesBySearch","query","fetchMoviesById","movieId","fetchCastById","fetchReviewById"],"sourceRoot":""}