{"version":3,"file":"static/js/786.93cc72ad.chunk.js","mappings":"yRAEO,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACrB,OACE,+BAEI,wBACGA,EAAKC,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACrB,OACE,2BACE,gBACEC,MAAO,IACPC,IACEF,EAAY,6CAC8BA,GACtCG,EAENC,IAAKL,KAEP,uBAAIA,MAVGD,UCHR,SAASO,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KAwBA,IAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMb,GAAN,mGAEGc,EAAAA,EAAAA,IAAcd,GAFjB,UAEVe,EAFU,QAGVC,EAASD,EAAKjB,KAAKC,KACvB,kBAA4C,CAC1CE,KADF,EAAGA,KAEDgB,UAFF,EAASA,UAGPf,aAHF,EAAoBA,aAIlBF,GAJF,EAAkCA,QAOxBkB,OAXI,sBAYR,IAAIC,MAAM,kBAZF,OAchBR,EAAQK,GAdQ,kDAgBhBI,EAAAA,GAAAA,MAAY,KAAMC,SAhBF,0DAAH,sDAmBjBR,EAAYL,KACX,CAACA,IACAc,OAAOC,KAAKzB,GAAMoB,OAAS,EAC7B,OACE,+BACE,SAACrB,EAAD,CAAMC,KAAMA,Q,0MCjCpB0B,IAAAA,SAAAA,QAAyB,+BAEzBA,IAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMC,EAAoB,mCAAG,6GAETF,IAAAA,IAAA,uBAFS,cAE1BG,EAF0B,yBAGzBA,EAASZ,MAHgB,gCAKhCa,QAAQC,IAAI,KAAMR,SALc,yDAAH,qDASpBS,EAAmB,mCAAG,WAAMC,GAAN,gGAERP,IAAAA,IAAA,8BAAiCO,IAFzB,cAEzBJ,EAFyB,yBAGxBA,EAASZ,MAHe,gCAK/Ba,QAAQC,IAAI,KAAMR,SALa,yDAAH,sDASnBW,EAAe,mCAAG,WAAMxB,GAAN,gGAEJgB,IAAAA,IAAA,iBAAoBhB,IAFhB,cAErBmB,EAFqB,yBAGpBA,EAASZ,MAHW,gCAK3Ba,QAAQC,IAAI,KAAMR,SALS,yDAAH,sDASfP,EAAa,mCAAG,WAAMN,GAAN,gGAEFgB,IAAAA,IAAA,iBAAoBhB,EAApB,aAFE,cAEnBmB,EAFmB,yBAGlBA,EAASZ,MAHS,gCAKzBa,QAAQC,IAAI,KAAMR,SALO,yDAAH,sDASbY,EAAe,mCAAG,WAAMzB,GAAN,gGAEJgB,IAAAA,IAAA,iBAAoBhB,EAApB,aAFI,cAErBmB,EAFqB,yBAGpBA,EAASZ,MAHW,gCAK3Ba,QAAQC,IAAI,KAAMR,SALS,yDAAH,uD","sources":["components/cast/Cast.jsx","pages/CastPage.jsx","service/apiService.jsx"],"sourcesContent":["import defaultImg from '../../images/defaultImg.png';\nimport PropTypes from 'prop-types';\nexport function Cast({ cast }) {\n  return (\n    <>\n      {\n        <ul>\n          {cast.map(({ id, name, profile_path }) => {\n            return (\n              <li key={id}>\n                <img\n                  width={180}\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/original${profile_path}`\n                      : defaultImg\n                  }\n                  alt={name}\n                />\n                <p>{name}</p>\n              </li>\n            );\n          })}\n        </ul>\n      }\n    </>\n  );\n}\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { fetchCastById } from '../service/apiService';\nimport { Cast } from '../components/cast/Cast';\n\nexport default function CastPage() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState({});\n\n  useEffect(() => {\n    const getCastInfo = async id => {\n      try {\n        const data = await fetchCastById(id);\n        const result = data.cast.map(\n          ({ name, character, profile_path, id }) => ({\n            name,\n            character,\n            profile_path,\n            id,\n          })\n        );\n        if (!result.length) {\n          throw new Error('Cast not found');\n        }\n        setCast(result);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    };\n    getCastInfo(movieId);\n  }, [movieId]);\n  if (Object.keys(cast).length > 0)\n    return (\n      <>\n        <Cast cast={cast} />\n      </>\n    );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b955cfd3c9f73eb51718e31500dd3096';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMoovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesBySearch = async query => {\n  try {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCastById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviewById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// export async function fetchTrendingMoovies() {\n//   const url = `/trending/movie/week?api_key=${apiKey}`;\n//   const { data } = await axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesBySearch(searchMovie) {\n//   const url = `/search/movie?query=${searchMovie}&api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesById(movieId) {\n//   const url = `/movie/${movieId}?api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n"],"names":["Cast","cast","map","id","name","profile_path","width","src","defaultImg","alt","CastPage","movieId","useParams","useState","setCast","useEffect","getCastInfo","fetchCastById","data","result","character","length","Error","toast","message","Object","keys","axios","api_key","fetchTrendingMoovies","response","console","log","fetchMoviesBySearch","query","fetchMoviesById","fetchReviewById"],"sourceRoot":""}