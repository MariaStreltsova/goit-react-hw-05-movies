{"version":3,"file":"static/js/193.9f63840d.chunk.js","mappings":"+QACO,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QACxB,OACE,0BACE,wBACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,UCAJ,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAqBA,IAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMT,GAAN,mGAEGU,EAAAA,EAAAA,IAAgBV,GAFnB,UAEVW,EAFU,QAGVC,EAASD,EAAKE,QAAQd,KAAI,kBAA8B,CAC5DC,GAD8B,EAAGA,GAEjCC,OAF8B,EAAOA,OAGrCC,QAH8B,EAAeA,aAKnCY,OARI,sBASR,IAAIC,MAAM,IATF,OAWhBR,EAAWK,GAXK,kDAahBI,EAAAA,GAAAA,MAAY,oBAbI,0DAAH,sDAgBjBP,EAAYL,KACX,CAACA,IACAa,OAAOC,KAAKpB,GAASgB,OAAS,EAChC,OACE,+BACE,SAACjB,EAAD,CAASC,QAASA,Q,0MC9B1BqB,IAAAA,SAAAA,QAAyB,+BAEzBA,IAAAA,SAAAA,OAAwB,CAAEC,QADV,oCAGT,IAAMC,EAAoB,mCAAG,6GAETF,IAAAA,IAAA,uBAFS,cAE1BG,EAF0B,yBAGzBA,EAASX,MAHgB,gCAKhCY,QAAQC,IAAI,KAAMC,SALc,yDAAH,qDASpBC,EAAmB,mCAAG,WAAMC,GAAN,gGAERR,IAAAA,IAAA,8BAAiCQ,IAFzB,cAEzBL,EAFyB,yBAGxBA,EAASX,MAHe,gCAK/BY,QAAQC,IAAI,KAAMC,SALa,yDAAH,sDASnBG,EAAe,mCAAG,WAAMxB,GAAN,gGAEJe,IAAAA,IAAA,iBAAoBf,IAFhB,cAErBkB,EAFqB,yBAGpBA,EAASX,MAHW,gCAK3BY,QAAQC,IAAI,KAAMC,SALS,yDAAH,sDASfI,EAAa,mCAAG,WAAMzB,GAAN,gGAEFe,IAAAA,IAAA,iBAAoBf,EAApB,aAFE,cAEnBkB,EAFmB,yBAGlBA,EAASX,MAHS,gCAKzBY,QAAQC,IAAI,KAAMC,SALO,yDAAH,sDASbf,EAAe,mCAAG,WAAMN,GAAN,gGAEJe,IAAAA,IAAA,iBAAoBf,EAApB,aAFI,cAErBkB,EAFqB,yBAGpBA,EAASX,MAHW,gCAK3BY,QAAQC,IAAI,KAAMC,SALS,yDAAH","sources":["components/reviews/Reviews.jsx","pages/ReviewsPage.jsx","service/apiService.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nexport function Reviews({ reviews }) {\n  return (\n    <div>\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>{author}</p>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { fetchReviewById } from '../service/apiService';\nimport { Reviews } from 'components/reviews/Reviews';\n\nexport default function CastPage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState({});\n\n  useEffect(() => {\n    const getCastInfo = async id => {\n      try {\n        const data = await fetchReviewById(id);\n        const result = data.results.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n        if (!result.length) {\n          throw new Error('');\n        }\n        setReviews(result);\n      } catch (error) {\n        toast.error('No reviews found');\n      }\n    };\n    getCastInfo(movieId);\n  }, [movieId]);\n  if (Object.keys(reviews).length > 0)\n    return (\n      <>\n        <Reviews reviews={reviews} />\n      </>\n    );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b955cfd3c9f73eb51718e31500dd3096';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMoovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesBySearch = async query => {\n  try {\n    const response = await axios.get(`/search/movie?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchCastById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchReviewById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// export async function fetchTrendingMoovies() {\n//   const url = `/trending/movie/week?api_key=${apiKey}`;\n//   const { data } = await axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesBySearch(searchMovie) {\n//   const url = `/search/movie?query=${searchMovie}&api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n\n// export async function fetchMoviesById(movieId) {\n//   const url = `/movie/${movieId}?api_key=${apiKey}`;\n//   const { data } = axios.get(url);\n//   return data;\n// }\n"],"names":["Reviews","reviews","map","id","author","content","CastPage","movieId","useParams","useState","setReviews","useEffect","getCastInfo","fetchReviewById","data","result","results","length","Error","toast","Object","keys","axios","api_key","fetchTrendingMoovies","response","console","log","message","fetchMoviesBySearch","query","fetchMoviesById","fetchCastById"],"sourceRoot":""}